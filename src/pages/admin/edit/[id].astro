---
import AdminLayout from "../../../layouts/AdminLayout.astro";
import { getCollection } from "astro:content";

// Função para gerar os caminhos estáticos
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { id: post.id },
  }));
}

// Recupera o parâmetro de URL (id)
const { id } = Astro.params;
const post = (await getCollection("blog")).find((post) => post.id === id);
---

<AdminLayout title="Edit Post" description="Edit a blog post">
  <section class="form-container">
    <div class="form-card">
      <h2 class="form-title">Edit Post</h2>
      <form id="editForm" method="post" action={`/admin/edit/${id}`}>
        <label for="title">Title</label>

        <input
          type="text"
          id="title"
          name="title"
          value={post?.data.title}
          required
        />

        <div class="hero-img-display">
          <label>Current Image:</label>

          <!-- Container de imagem e input de arquivo -->
          <div class="image-container">
            <img
              onclick="document.getElementById('heroImg').click();"
              id="imagePreview"
              src={post?.data.heroImage}
              alt="Current Image"
            />
            <input
              type="file"
              id="heroImg"
              name="heroImg"
              accept="image/*"
              style="display: none;"
            />
          </div>
        </div>

        <label for="content">Content</label>
        <textarea id="content" name="content" required>
          {post?.body}
        </textarea>

        <button type="button" id="btn-save" class="btn-submit"
          >Save Changes</button
        >
      </form>
    </div>
  </section>
</AdminLayout>

<script>
  import { updatePost } from "../../../scripts/updatePost.js";
  import { handleImageChange } from "../../../scripts/handleImageChange.js";

  const heroImgElement = document.getElementById("heroImg");
  if (heroImgElement) {
    heroImgElement.addEventListener("change", handleImageChange);
  }

  const saveButton = document.getElementById("btn-save");
  const editForm = document.getElementById("editForm") as HTMLFormElement;

  if (saveButton && editForm) {
    saveButton.addEventListener("click", async () => {
      const formData = new FormData(editForm);
      await updatePost("{id}", formData); // Substitua "{id}" pelo ID do post dinâmico
    });
  }
</script>

<style>
  .hero-img-display {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  img {
    width: 300px;
    height: 200px;
    object-fit: cover;
    object-position: center;
    cursor: pointer;
  }
</style>
